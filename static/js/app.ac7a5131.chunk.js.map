{"version":3,"sources":["Loading.js","Weather.js","App.js","web-build/register-service-worker.js"],"names":["Loading","View","style","styles","container","StatusBar","barStyle","Text","text","StyleSheet","create","flex","backgroundColor","justifyContent","paddingHorizontal","paddingVertical","color","fontSize","weatherOptions","Thunderstorm","iconName","gradient","title","subtitle","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Mist","Dust","Haze","Weather","temp","condition","LinearGradient","colors","halfContainer","MaterialCommunityIcons","size","name","textContainer","propTypes","PropTypes","number","isRequired","oneOf","alignItems","fontWeight","marginBottom","textAlign","API_KEY","state","isLoading","getWeather","latitude","longitude","a","async","axios","get","data","main","weather","setState","getLocation","Location","coords","Alert","alert","this","Math","round","React","Component","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.ac7a5131.chunk.js","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, StatusBar } from \"react-native\";\n\nexport default function Loading() {\n  return (\n    <View style={styles.container}>\n      <StatusBar barStyle=\"dark-content\"></StatusBar>\n      <Text style={styles.text}>Getting the Fucking Weather</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fdf6AA\",\n    justifyContent: \"flex-end\",\n    paddingHorizontal: 30,\n    paddingVertical: 100,\n  },\n  text: {\n    color: \"#2c2c2c\",\n    fontSize: 30,\n  },\n});\n","import React from \"react\";\nimport { View, Text, StyleSheet, StatusBar } from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nconst weatherOptions = {\n  Thunderstorm: {\n    iconName: \"weather-lightning\",\n    gradient: [\"#373B44\", \"#4286f4\"],\n    title: \"Thunderstorm in the house\",\n    subtitle: \"Actually, outside of the house\",\n  },\n  Drizzle: {\n    iconName: \"weather-hail\",\n    gradient: [\"#89F7FE\", \"#66A6FF\"],\n    title: \"Drizzle\",\n    subtitle: \"Is like rain, but gay üè≥Ô∏è‚Äçüåà\",\n  },\n  Rain: {\n    iconName: \"weather-rainy\",\n    gradient: [\"#00C6FB\", \"#005BEA\"],\n    title: \"Raining like a MF\",\n    subtitle: \"For more info look outside\",\n  },\n  Snow: {\n    iconName: \"weather-snowy\",\n    gradient: [\"#7DE2FC\", \"#B9B6E5\"],\n    title: \"Cold as balls\",\n    subtitle: \"Do you want to build a snowman? Fuck no.\",\n  },\n  Atmosphere: {\n    iconName: \"weather-hail\",\n    gradient: [\"#89F7FE\", \"#66A6FF\"],\n  },\n  Clear: {\n    iconName: \"weather-sunny\",\n    gradient: [\"#FF7300\", \"#FEF253\"],\n    title: \"Sunny as fuck\",\n    subtitle: \"Go get your ass burnt\",\n  },\n  Clouds: {\n    iconName: \"weather-cloudy\",\n    gradient: [\"#D7D2CC\", \"#304352\"],\n    title: \"Clouds\",\n    subtitle: \"I know, fucking boring\",\n  },\n  Mist: {\n    iconName: \"weather-hail\",\n    gradient: [\"#4DA0B0\", \"#D39D38\"],\n    title: \"Mist!\",\n    subtitle: \"It's like you have no glasses on.\",\n  },\n  Dust: {\n    iconName: \"weather-hail\",\n    gradient: [\"#4DA0B0\", \"#D39D38\"],\n    title: \"Dusty\",\n    subtitle: \"Thanks a lot China üñïüèª\",\n  },\n  Haze: {\n    iconName: \"weather-hail\",\n    gradient: [\"#4DA0B0\", \"#D39D38\"],\n    title: \"Haze\",\n    subtitle: \"Just don't go outside.\",\n  },\n};\n\nexport default function Weather({ temp, condition }) {\n  return (\n    <LinearGradient\n      colors={weatherOptions[condition].gradient}\n      style={styles.container}\n    >\n      <StatusBar barStyle=\"light-content\" />\n      <View style={styles.halfContainer}>\n        <MaterialCommunityIcons\n          size={96}\n          name={weatherOptions[condition].iconName}\n          color=\"white\"\n        />\n        <Text style={styles.temp}>{temp}¬∞</Text>\n      </View>\n      <View style={styles.textContainer}>\n        <Text style={styles.title}>{weatherOptions[condition].title}</Text>\n        <Text style={styles.subtitle}>\n          {weatherOptions[condition].subtitle}\n        </Text>\n      </View>\n    </LinearGradient>\n  );\n}\n\nWeather.propTypes = {\n  temp: PropTypes.number.isRequired,\n  condition: PropTypes.oneOf([\n    \"Thunderstorm\",\n    \"Drizzle\",\n    \"Rain\",\n    \"Snow\",\n    \"Atmosphere\",\n    \"Clear\",\n    \"Clouds\",\n    \"Haze\",\n    \"Mist\",\n    \"Dust\",\n  ]).isRequired,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  temp: {\n    fontSize: 42,\n    color: \"white\",\n  },\n  halfContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    color: \"white\",\n    fontSize: 44,\n    fontWeight: \"300\",\n    marginBottom: 10,\n    textAlign: \"left\",\n  },\n  subtitle: {\n    fontWeight: \"600\",\n    color: \"white\",\n    fontSize: 24,\n    textAlign: \"left\",\n  },\n  textContainer: {\n    alignItems: \"flex-start\",\n    paddingHorizontal: 40,\n    justifyContent: \"center\",\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { Alert } from \"react-native\";\nimport Loading from \"./Loading\";\nimport * as Location from \"expo-location\";\nimport axios from \"axios\";\nimport Weather from \"./Weather\";\n\nconst API_KEY = \"13e3a393d13c0b5d3d4652548ce004ea\";\n\nexport default class extends React.Component {\n  state = {\n    isLoading: true,\n  };\n  getWeather = async (latitude, longitude) => {\n    const {\n      data: {\n        main: { temp },\n        weather,\n      },\n    } = await axios.get(\n      `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&APPID=${API_KEY}&units=metric`\n    );\n    this.setState({\n      isLoading: false,\n      condition: weather[0].main,\n      temp,\n    });\n  };\n  getLocation = async () => {\n    try {\n      await Location.requestPermissionsAsync();\n      const {\n        coords: { latitude, longitude },\n      } = await Location.getCurrentPositionAsync();\n      this.getWeather(latitude, longitude);\n    } catch (error) {\n      Alert.alert(\"Can't find you.\");\n    }\n  };\n\n  componentDidMount() {\n    this.getLocation();\n  }\n\n  render() {\n    const { isLoading, temp, condition } = this.state;\n    return isLoading ? (\n      <Loading />\n    ) : (\n      <Weather temp={Math.round(temp)} condition={condition} />\n    );\n  }\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/fokin-weather/expo-service-worker.js', { scope: '/fokin-weather/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}